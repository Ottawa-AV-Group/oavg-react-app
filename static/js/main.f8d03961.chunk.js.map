{"version":3,"sources":["login/user.tsx","login/registerContent.tsx","login/loginContent.tsx","login/loginButton.tsx","login/logoutButton.tsx","nav.tsx","pages/home.tsx","pages/about.tsx","pages/contact.tsx","routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["userReducer","state","action","user","nextUser","UserStateContext","React","createContext","UserDispatchContext","undefined","UserProvider","children","useReducer","dispatch","Provider","value","useStyles","makeStyles","theme","root","marginTop","spacing","marginBottom","RegisterContent","props","classes","setUser","useContext","Fragment","DialogTitle","DialogContent","initialValues","email","password","confirmPassword","validate","values","errors","test","onSubmit","setSubmitting","firebase","auth","createUserWithEmailAndPassword","then","userCredential","closeCallback","catch","error","alert","code","message","touched","handleChange","handleBlur","handleSubmit","isSubmitting","className","autoComplete","noValidate","TextField","fullWidth","color","variant","id","type","name","label","onChange","onBlur","helperText","Button","disabled","extraContent","LoginContent","signInWithEmailAndPassword","LoginButton","useState","open","setOpen","mode","setMode","content","Typography","onClick","Dialog","onClose","LogoutButton","Nav","AppBar","position","Grid","container","justify","item","Toolbar","to","Home","style","paddingTop","align","title","width","height","src","frameBorder","allow","allowFullScreen","About","Contact","Link","href","routes","exact","path","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","palette","primary","main","secondary","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.f8d03961.chunk.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport firebase from \"firebase\";\n\nexport type User = null | firebase.User;\n\nexport type UserState = { user: User };\nexport type UserPayload = { nextUser: User };\n\nexport function userReducer(state: UserState, action: UserPayload): UserState {\n  return { user: action.nextUser };\n}\n\nexport const UserStateContext = React.createContext<UserState>({\n  user: null,\n});\nexport const UserDispatchContext = React.createContext<\n  undefined | React.Dispatch<UserPayload>\n>(undefined);\n\nexport const UserProvider: FunctionComponent = ({ children }) => {\n  const [state, dispatch] = React.useReducer(userReducer, { user: null });\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchContext.Provider value={dispatch}>\n        {children}\n      </UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  );\n};\n","import {\n  Button,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\nimport { UserDispatchContext } from \"./user\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { Formik } from \"formik\";\n\ninterface Props {\n  extraContent?: JSX.Element;\n  closeCallback?: Function;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function RegisterContent(props: Props) {\n  const classes = useStyles();\n  const setUser = React.useContext(UserDispatchContext);\n\n  return (\n    <React.Fragment>\n      <DialogTitle>Register a new account</DialogTitle>\n      <DialogContent>\n        <Formik\n          initialValues={{ email: \"\", password: \"\", confirmPassword: \"\" }}\n          validate={(values) => {\n            const errors: {\n              email?: string;\n              password?: string;\n              confirmPassword?: string;\n            } = {};\n            if (!values.email) {\n              errors.email = \"Required\";\n            } else if (\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n            ) {\n              errors.email = \"Invalid email address\";\n            } else if (values.password !== values.confirmPassword) {\n              errors.confirmPassword = \"Passwords must match\";\n            }\n            return errors;\n          }}\n          onSubmit={(values, { setSubmitting }) => {\n            firebase\n              .auth()\n              .createUserWithEmailAndPassword(values.email, values.password)\n              .then((userCredential) => {\n                // Signed in\n                setUser && setUser({ nextUser: userCredential.user });\n                setSubmitting(false);\n                props.closeCallback && props.closeCallback();\n                // ...\n              })\n              .catch((error) => {\n                alert(`${error.code}\\n${error.message}`);\n                setSubmitting(false);\n              });\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            /* and other goodies */\n          }) => (\n            <form\n              className={classes.root}\n              onSubmit={handleSubmit}\n              autoComplete={\"off\"}\n              noValidate\n            >\n              <TextField\n                fullWidth\n                color=\"primary\"\n                variant=\"outlined\"\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                helperText={touched.email && errors.email}\n              />\n              <TextField\n                fullWidth\n                color=\"primary\"\n                variant=\"outlined\"\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                label=\"Password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                helperText={touched.password && errors.password}\n              />\n              <TextField\n                fullWidth\n                color=\"primary\"\n                variant=\"outlined\"\n                id=\"confirmPassword\"\n                type=\"password\"\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                value={values.confirmPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                helperText={touched.confirmPassword && errors.confirmPassword}\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"secondary\"\n                type=\"submit\"\n                disabled={isSubmitting}\n              >\n                Register\n              </Button>\n            </form>\n          )}\n        </Formik>\n        {props.extraContent}\n      </DialogContent>\n    </React.Fragment>\n  );\n}\n","import {\n  Button,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\nimport { UserDispatchContext } from \"./user\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { Formik } from \"formik\";\n\ninterface Props {\n  extraContent?: JSX.Element;\n  closeCallback?: Function;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function LoginContent(props: Props) {\n  const classes = useStyles();\n  const setUser = React.useContext(UserDispatchContext);\n\n  return (\n    <React.Fragment>\n      <DialogTitle>Login</DialogTitle>\n      <DialogContent>\n        <Formik\n          initialValues={{ email: \"\", password: \"\" }}\n          validate={(values) => {\n            const errors: {\n              email?: string;\n              password?: string;\n            } = {};\n            if (!values.email) {\n              errors.email = \"Required\";\n            } else if (\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n            ) {\n              errors.email = \"Invalid email address\";\n            }\n            return errors;\n          }}\n          onSubmit={(values, { setSubmitting }) => {\n            firebase\n              .auth()\n              .signInWithEmailAndPassword(values.email, values.password)\n              .then((userCredential) => {\n                setUser && setUser({ nextUser: userCredential.user });\n                setSubmitting(false);\n                props.closeCallback && props.closeCallback();\n              })\n              .catch((error) => {\n                alert(`${error.code}\\n${error.message}`);\n                setSubmitting(false);\n              });\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            /* and other goodies */\n          }) => (\n            <form\n              className={classes.root}\n              onSubmit={handleSubmit}\n              autoComplete={\"off\"}\n              noValidate\n            >\n              <TextField\n                fullWidth\n                color=\"primary\"\n                variant=\"outlined\"\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                helperText={touched.email && errors.email}\n              />\n              <TextField\n                fullWidth\n                color=\"primary\"\n                variant=\"outlined\"\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                label=\"Password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                helperText={touched.password && errors.password}\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"secondary\"\n                type=\"submit\"\n                disabled={isSubmitting}\n              >\n                Login\n              </Button>\n            </form>\n          )}\n        </Formik>\n        {props.extraContent}\n      </DialogContent>\n    </React.Fragment>\n  );\n}\n","import { Button, Dialog, Typography } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\nimport RegisterContent from \"./registerContent\";\nimport LoginContent from \"./loginContent\";\n\nexport default function LoginButton() {\n  const [open, setOpen] = useState(false);\n  const [mode, setMode] = useState<\"Login\" | \"Register\">(\"Login\");\n\n  const content =\n    mode === \"Login\" ? (\n      <LoginContent\n        closeCallback={() => setOpen(false)}\n        extraContent={\n          <Typography variant=\"body1\">\n            Don't have an account?{\" \"}\n            <Button onClick={() => setMode(\"Register\")}>Register</Button>\n          </Typography>\n        }\n      />\n    ) : (\n      <RegisterContent\n        closeCallback={() => setOpen(false)}\n        extraContent={\n          <Typography variant=\"body1\">\n            Already have an account?{\" \"}\n            <Button onClick={() => setMode(\"Login\")}>Login</Button>\n          </Typography>\n        }\n      />\n    );\n\n  return (\n    <React.Fragment>\n      <Button classes={{ label: \"navbar-link\" }} onClick={() => setOpen(true)}>\n        Login\n      </Button>\n      <Dialog open={open} onClose={() => setOpen(false)}>\n        {content}\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { UserDispatchContext } from \"./user\";\n\nexport default function LogoutButton() {\n  const setUser = React.useContext(UserDispatchContext);\n  return (\n    <Button\n      classes={{ label: \"navbar-link\" }}\n      onClick={() => {\n        setUser && setUser({ nextUser: null });\n      }}\n    >\n      Logout\n    </Button>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport { AppBar, Button, Toolbar, Grid } from \"@material-ui/core\";\nimport React from \"react\";\n\nimport { UserStateContext } from \"./login/user\";\n\nimport LoginButton from \"./login/loginButton\";\nimport LogoutButton from \"./login/logoutButton\";\n\nexport default function Nav() {\n  const { user } = React.useContext(UserStateContext);\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\" color=\"transparent\">\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Toolbar>\n              <Link className=\"nav-link\" to=\"/\">\n                <Button classes={{ label: \"navbar-brand\" }}>OAVG</Button>\n              </Link>\n              <Link className=\"nav-link\" to=\"/about\">\n                <Button classes={{ label: \"navbar-link\" }}>About</Button>\n              </Link>\n              <Link className=\"nav-link\" to=\"/contact\">\n                <Button classes={{ label: \"navbar-link\" }}>Contact</Button>\n              </Link>\n            </Toolbar>\n          </Grid>\n          <Grid item>\n            <Toolbar>{user ? <LogoutButton /> : <LoginButton />}</Toolbar>\n          </Grid>\n        </Grid>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","import { Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function Home() {\n  return (\n    <div style={{ paddingTop: \"16px\" }}>\n      <Typography variant=\"h4\" align=\"center\">\n        Ottawa Autonomous Vehicle Group (OAVG)\n      </Typography>\n      <Grid container justify=\"center\">\n        <Grid item>\n          <iframe\n            title=\"Snowplow Build\"\n            width=\"1050\"\n            height=\"575\"\n            src=\"https://www.youtube.com/embed/VAFsyuuwNtk?autoplay=1\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function About() {\n  return <React.Fragment></React.Fragment>;\n}\n","import { Link, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function Contact() {\n  return (\n    <div className=\"container\" style={{ paddingTop: \"2rem\" }}>\n      <Typography variant=\"h4\">Contact Us</Typography>\n      <hr />\n      <Typography variant=\"subtitle1\">\n        We are very happy to accomodate whatever questions you may have on our\n        projects, please feel free to reach out to us!\n      </Typography>\n      <Typography variant=\"subtitle1\">\n        <strong>\n          E-Mail:{\" \"}\n          <Link\n            color=\"secondary\"\n            href=\"mailto:ottawaautonomousvehiclegroup@gmail.com\"\n          >\n            OttawaAutonomousVehicleGroup@gmail.com\n          </Link>\n        </strong>\n      </Typography>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\n\nimport Home from \"./pages/home\";\nimport About from \"./pages/about\";\nimport Contact from \"./pages/contact\";\n\nexport default function routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/about\">\n        <About />\n      </Route>\n      <Route exact path=\"/contact\">\n        <Contact />\n      </Route>\n    </Switch>\n  );\n}\n","import React from \"react\";\n\nimport Nav from \"./nav\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline, useMediaQuery } from \"@material-ui/core\";\nimport Router from \"./routes\";\nimport { UserProvider } from \"./login/user\";\nexport default function App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n          primary: {\n            main: \"#3355dd\",\n          },\n          secondary: {\n            main: \"#dddd44\",\n          },\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <React.Fragment>\n      <UserProvider>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <Nav />\n          <Router />\n        </ThemeProvider>\n      </UserProvider>\n    </React.Fragment>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/analytics\";\n\nconst firebaseConfig = {\n  apiKey: `AIzaSyDGHwfW3pX2f_A7hO5bUhgWdhg1i5Z2Y50`,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/oavg-react-app\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}